;;; version 0.2.1
(from math [sqrt])

(def rectangles [m n]
  (return (// (* m (+ m 1) n (+ n 1)) 4)))

(def solve-n [m r]
  (return (int (/ (- (sqrt (+ (* m m (+ m 1) (+ m 1)) (* 16 r m (+ m 1)))) (* m (+ m 1)))
                  (* 2 m (+ m 1))))))

(def solution [r]
  (= nearest 0)
  (= rst 0)
  (for m (range 1 2001)
    (= n (solve-n m r))
    (for j [n (+ n 1)]
      (= k (rectangles m j))
      (if (< (abs (- k r)) (abs (- nearest r)))
          (do (= nearest k)
              (= rst (* m n))))))
  (return rst))

(defmacro euler [*inputs]
  (return `(do (from time [time])
               (def main []
                 (= start (time))
                 (print (solution ~@inputs))
                 (print "elapsed:" (- (time) start)))
               (main))))
(euler 2000000)
